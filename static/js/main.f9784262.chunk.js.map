{"version":3,"sources":["components/Counter.module.css","components/Header.module.css","components/UserProfile.module.css","store/counter.js","components/Counter.js","store/auth.js","components/Header.js","components/Auth.js","components/UserProfile.js","App.js","store/index.js","index.js","components/Auth.module.css"],"names":["module","exports","counterSlice","createSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","payload","toggleCounter","counterActions","actions","Counter","useSelector","dispatch","useDispatch","className","classes","value","onClick","authSlice","isAuthenticated","login","logout","authActions","Header","isAuth","auth","header","href","Auth","onSubmit","event","preventDefault","control","htmlFor","type","id","UserProfile","profile","App","store","configureStore","reducer","counterReducer","authReducer","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f9784262.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__1psqm\",\"value\":\"Counter_value__1cUiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__357kp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__2RYdz\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState = { counter : 0, showCounter: true}\r\n\r\nconst counterSlice = createSlice({\r\n    name : 'counter',\r\n    initialState : initialCounterState,\r\n    reducers : {\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        increase(state, action){\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggleCounter(state){\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    } \r\n\r\n})\r\n\r\nexport default counterSlice.reducer;\r\nexport const counterActions = counterSlice.actions; ","import classes from \"./Counter.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { counterActions } from '../store/counter'\r\n\r\nconst Counter = () => {\r\n\r\n  const counter = useSelector((state) => state.counter.counter);\r\n  const showCounter = useSelector((state) => state.counter.showCounter);\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleCounterHandler = () => {\r\n    dispatch(counterActions.toggleCounter())\r\n  };\r\n\r\n  const incrementHandler = () => {\r\n    dispatch(counterActions.increment());\r\n  }\r\n\r\n  const decrementHandler = () => {\r\n    dispatch(counterActions.decrement());\r\n  }\r\n\r\n  const increaseHandler = () => {\r\n    dispatch(counterActions.increase(5));\r\n  }\r\n\r\n\r\n  return (\r\n    <main className={classes.counter}>\r\n      <h1>Redux Counter</h1>\r\n      {showCounter && <div className={classes.value}>{counter}</div>}\r\n      <div>\r\n        <button onClick={incrementHandler}>Increment</button>\r\n        <button onClick={increaseHandler}>Increase by 5</button>\r\n        <button onClick={decrementHandler}>Decrement</button>\r\n      </div>\r\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialAuthState = { isAuthenticated: false}\r\n\r\nconst authSlice = createSlice({\r\n    name : 'auth',\r\n    initialState : initialAuthState,\r\n    reducers : {\r\n        login(state){\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state){\r\n            state.isAuthenticated = false;\r\n        }\r\n    }\r\n})\r\n\r\nexport default authSlice.reducer;\r\nexport const authActions = authSlice.actions; ","import classes from './Header.module.css';\r\n\r\n/* \r\nQuest. 목록들과 로그아웃 버튼은 리덕스에서 로그인했을 때만 나타내기 \r\n즉, '사용자 인증상태'는 전역으로 관리해야한다. \r\n*/\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authActions } from '../store/auth'\r\n\r\nconst Header = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector(state => state.auth.isAuthenticated);\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(authActions.logout())\r\n  }\r\n\r\n  return (\r\n    <header className={classes.header}>\r\n      <h1>Redux Auth</h1>\r\n      { isAuth && (\r\n          <nav>\r\n            <ul>\r\n                <>\r\n                <li>\r\n                  <a href='/'>My Products</a>\r\n                </li>\r\n                <li>\r\n                  <a href='/'>My Sales</a>\r\n                </li>\r\n                </>\r\n              <li>\r\n                <button onClick={logoutHandler}>Logout</button>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        ) \r\n      }\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import classes from './Auth.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authActions } from '../store/auth'\r\n\r\n\r\nconst Auth = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const loginHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(authActions.login());\r\n  }\r\n  return (\r\n    <main className={classes.auth}>\r\n      <section>\r\n        <form onSubmit={loginHandler}>\r\n          <div className={classes.control}>\r\n            <label htmlFor='email'>Email</label>\r\n            <input type='email' id='email' />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor='password'>Password</label>\r\n            <input type='password' id='password' />\r\n          </div>\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import classes from './UserProfile.module.css';\r\n/* \r\n\r\n*/\r\nconst UserProfile = () => {\r\n  return (\r\n    <main className={classes.profile}>\r\n      <h2>My User Profile</h2>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import { Fragment } from 'react';\r\n\r\nimport Counter from './components/Counter';\r\nimport Header from './components/Header';\r\nimport Auth from './components/Auth';\r\nimport UserProfile from './components/UserProfile';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\nconst isAuth = useSelector(state => state.auth.isAuthenticated);\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n       <Header />\r\n       {!isAuth && <Auth />}\r\n       {isAuth && <UserProfile />}\r\n\r\n       <Counter />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport counterReducer from './counter'\r\nimport authReducer from './auth'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer : {\r\n        counter : counterReducer,\r\n        auth : authReducer  \r\n    }\r\n})\r\n\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store/index';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<Provider store={store}><App /></Provider>);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__5p8R3\",\"control\":\"Auth_control__1_yNE\"};"],"sourceRoot":""}